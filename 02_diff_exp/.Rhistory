knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
source(here::here("./R/functions.R"))
library(viridis)
library(DESeq2)
dir.create(here::here("./out"))
dir.create(here::here("./out"), showWarnings = FALSE)
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_differential_expression/R/functions.R")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_differential_expression/R/functions.R")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
source(here::here("./R/functions.R"))
library(viridis)
library(DESeq2)
dir.create(here::here("./out"), showWarnings = FALSE)
#load and tidy metadata
meta <- readRDS(file= here::here(".././data-raw/meta_20230126.rda"))
#load and tidy count data file
load(file= here::here(".././data-raw/count_raw/counts.rda"))
dat <- tidy_raw_counts_fun(counts)
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_differential_expression/R/functions.R")
#load and tidy metadata
meta <- readRDS(file= here::here(".././data-raw/meta_20230126.rda"))
#load and tidy count data file
load(file= here::here(".././data-raw/count_raw/counts.rda"))
dat <- tidy_raw_counts_fun(counts)
#clean up
rm(counts)
# Chunk 1: setup
source(here::here("./R/functions.R"))
library(viridis)
library(DESeq2)
dir.create(here::here("./out"), showWarnings = FALSE)
# Chunk 2: data prep
#load and tidy metadata
meta <- readRDS(file= here::here(".././data-raw/meta_20230126.rda"))
#load and tidy count data file
load(file= here::here(".././data-raw/count_raw/counts.rda"))
dat <- tidy_raw_counts_fun(counts)
#clean up
rm(counts)
# Chunk 3: sample exclusion
meta <- meta |> dplyr::filter(id!= "0156_44")
dat <- dat[,colnames(dat)!= "0156_44"]
nrow(meta)== ncol(dat) #check number of samples are the same
# Chunk 4: DE analysis
#re-order row names in meta test to match column names in FPKM data frame
meta <- meta[match(colnames(dat), meta$id),]
all(colnames(dat)==meta$id) #check
#Concatenate the variables exercise, zt and genotype into one variable for the DESeq model.
meta <- meta |> dplyr::mutate(genotype_zt_exercise = paste(genotype, zt, exercise, sep="_"),
genotype_zt_exercise = forcats::as_factor(genotype_zt_exercise))
# set up annotations
ah <- AnnotationHub::AnnotationHub()
# Chunk 1: setup
source(here::here("./R/functions.R"))
library(viridis)
library(DESeq2)
dir.create(here::here("./out"), showWarnings = FALSE)
# Chunk 2: data prep
#load and tidy metadata
meta <- readRDS(file= here::here(".././data-raw/meta_20230126.rda"))
#load and tidy count data file
load(file= here::here(".././data-raw/count_raw/counts.rda"))
dat <- tidy_raw_counts_fun(counts)
#clean up
rm(counts)
# Chunk 3: sample exclusion
meta <- meta |> dplyr::filter(id!= "0156_44")
dat <- dat[,colnames(dat)!= "0156_44"]
nrow(meta)== ncol(dat) #check number of samples are the same
# Chunk 4: DE analysis
#re-order row names in meta test to match column names in FPKM data frame
meta <- meta[match(colnames(dat), meta$id),]
all(colnames(dat)==meta$id) #check
#Concatenate the variables exercise, zt and genotype into one variable for the DESeq model.
meta <- meta |> dplyr::mutate(genotype_zt_exercise = paste(genotype, zt, exercise, sep="_"),
genotype_zt_exercise = forcats::as_factor(genotype_zt_exercise))
# set up annotations
ah <- AnnotationHub::AnnotationHub()
MouseEnsDb <- AnnotationHub::query(ah, c("EnsDb", "Mus musculus", "102"))[[1]]
annotations <- genes(MouseEnsDb, return.type = "data.frame")
#set up DESeq2 model for
dds<- DESeq2::DESeqDataSetFromMatrix(countData = dat, colData = meta, design = ~ 0 + genotype_zt_exercise + sex)
# Chunk 5: DE analysis
dds <- DESeq2::DESeq(dds)
#run minimal filtering
keep <- rowSums(counts(dds) >= 5) >= 2
dds <- dds[keep,]
saveRDS(dds, here::here("./out/dds.rds"))
# Chunk 6: extract main effects
main_effects <- list(sex = annotate_dat_fun(comp_name = "sex", main_effect= "sex",
results(dds, contrast= c(0, 0, 0, 0, 0, 0, 0, 0, 1))),
genotype= annotate_dat_fun(comp_name = "genotype", main_effect= "genotype",
results(dds, contrast= c(-1/4, 1/4, -1/4, -1/4, 1/4, -1/4, 1/4, 1/4, 0))),
exercise= annotate_dat_fun(comp_name = "exercise", main_effect= "exercise",
results(dds, contrast= c(1/4, -1/4, 1/4, -1/4, -1/4, -1/4, 1/4, 1/4, 0))),
zt= annotate_dat_fun(comp_name = "zt", main_effect= "zt",
results(dds, contrast= c(1/4, 1/4, -1/4, 1/4, -1/4, -1/4, -1/4, 1/4, 0))))
# Chunk 7: extract exercise contrast
ex_contrasts <- list(zt3_wt= annotate_dat_fun(comp_name = "zt3_wt", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_3_ex", "wt_3_sed"))),
zt15_wt= annotate_dat_fun(comp_name = "zt15_wt", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_ex", "wt_15_sed"))),
zt3_ko=annotate_dat_fun(comp_name = "zt3_ko", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_ex", "ko_3_sed"))),
zt15_ko= annotate_dat_fun(comp_name = "zt15_ko", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "ko_15_sed"))))
# Chunk 8: pextract genotype contrast analysis
genotype_contrasts <- list(zt3_ex= annotate_dat_fun(comp_name = "zt3_ex", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_ex", "wt_3_ex"))),
zt15_ex= annotate_dat_fun(comp_name = "zt15_ex", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "wt_15_ex"))),
zt3_sed=annotate_dat_fun(comp_name = "zt3_sed", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_sed", "wt_3_sed"))),
zt15_sed= annotate_dat_fun(comp_name = "zt15_sed", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_sed", "wt_15_sed"))))
openxlsx::write.xlsx(lapply(main_effects, tidy_DE_output_for_saving_fun),
file = here::here("./out/main_effects.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(ex_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/ex_vs_sed_contrasts.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(genotype_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/wt_vs_ko_contrasts.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(zt_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/zt3_vs_zt15_contrasts.xlsx"), keepNA= TRUE, na.string= "")
zt_contrasts <- list(wt_sed=  annotate_dat_fun(comp_name = "wt_sed", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_sed", "wt_3_sed"))),
wt_ex=  annotate_dat_fun(comp_name = "wt_ex", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_ex", "wt_3_ex"))),
ko_sed=annotate_dat_fun(comp_name = "ko_sed", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_sed", "ko_3_sed"))),
ko_ex= annotate_dat_fun(comp_name = "ko_ex", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "ko_3_ex"))))
openxlsx::write.xlsx(lapply(zt_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/zt3_vs_zt15_contrasts.xlsx"), keepNA= TRUE, na.string= "")
DE_results <- list(main_effects = main_effects, ex_contrasts = ex_contrasts, genotype_contrasts= genotype_contrasts, zt_contrasts = zt_contrasts)
saveRDS(DE_results, file=  here::here("./out/DE_results.rda"))
#dispersion estimates
pdf(here::here("./out/disp_ests.pdf"))
plotDispEsts(dds)
dev.off()
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call(main_effects, "rbind", title ="test")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call(main_effects, "rbind", title ="test"))
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call(main_effects, "rbind", title ="test"))
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call(main_effects, "rbind"), title ="test")
do.call(main_effects, "rbind")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
main_effects_pval_hist
data = do.call("rbind", main_effects)
View(data)
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
main_effects_pval_hist
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
pval_hist_fun(data = do.call("rbind", main_effects), title ="test")
genotype_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", genotype_contrasts), title ="genotype")
genotype_contrasts_pval_hist
source("C:/Users/kirmac/OneDrive - Karolinska Institutet/Kirstin/Projects/2022_01, HIF1a-KO clock execise/Analysis/transcriptomics_project/02_diff_exp/R/functions.R")
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="main effects")
main_effects_pval_hist
genotype_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", genotype_contrasts), title ="Genotype: wt vs KO")
genotype_contrasts_pval_hist
ex_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", ex_contrasts), title ="Contrast: ex vs sed")
ex_contrasts_pval_hist
#dispersion estimates
pdf(here::here("./out/disp_ests.pdf"))
plotDispEsts(dds)
dev.off()
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="main effects")
genotype_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", genotype_contrasts), title ="Genotype: wt vs KO")
ex_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", ex_contrasts), title ="Treatment: ex vs sed")
zt_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", zt_contrasts), title ="Time of Day: zt15 vs zt3")
ggplot2::ggplot(filename= "pval_hist_main_effects.pdf", plot = main_effects_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename= "pval_hist_genotype.pdf", plot= genotype_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename= "pval_hist_exercise.pdf", plot= ex_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename = "pval_hist_zt.pdf", plot = zt_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
zt_contrasts_pval_hist
ex_contrasts_pval_hist
genotype_contrasts_pval_hist
# Chunk 1: setup
source(here::here("./R/functions.R"))
library(viridis)
library(DESeq2)
dir.create(here::here("./out"), showWarnings = FALSE)
# Chunk 2: data prep
#load and tidy metadata
meta <- readRDS(file= here::here(".././data-raw/meta_20230126.rda"))
#load and tidy count data file
load(file= here::here(".././data-raw/count_raw/counts.rda"))
dat <- tidy_raw_counts_fun(counts)
#clean up
rm(counts)
# Chunk 3: sample exclusion
meta <- meta |> dplyr::filter(id!= "0156_44")
dat <- dat[,colnames(dat)!= "0156_44"]
nrow(meta)== ncol(dat) #check number of samples are the same
# Chunk 4: set up DE model
#re-order row names in meta test to match column names in FPKM data frame
meta <- meta[match(colnames(dat), meta$id),]
all(colnames(dat)==meta$id) #check
#Concatenate the variables exercise, zt and genotype into one variable for the DESeq model.
meta <- meta |> dplyr::mutate(genotype_zt_exercise = paste(genotype, zt, exercise, sep="_"),
genotype_zt_exercise = forcats::as_factor(genotype_zt_exercise))
# set up annotations
ah <- AnnotationHub::AnnotationHub()
MouseEnsDb <- AnnotationHub::query(ah, c("EnsDb", "Mus musculus", "102"))[[1]]
annotations <- genes(MouseEnsDb, return.type = "data.frame")
#set up DESeq2 model for
dds<- DESeq2::DESeqDataSetFromMatrix(countData = dat, colData = meta, design = ~ 0 + genotype_zt_exercise + sex)
# Chunk 5: DE analysis
dds <- DESeq2::DESeq(dds)
#run minimal filtering
keep <- rowSums(counts(dds) >= 5) >= 2
dds <- dds[keep,]
saveRDS(dds, here::here("./out/dds.rds"))
# Chunk 6: extract main effects
main_effects <- list(sex = annotate_dat_fun(comp_name = "sex", main_effect= "sex",
results(dds, contrast= c(0, 0, 0, 0, 0, 0, 0, 0, 1))),
genotype= annotate_dat_fun(comp_name = "genotype", main_effect= "genotype",
results(dds, contrast= c(-1/4, 1/4, -1/4, -1/4, 1/4, -1/4, 1/4, 1/4, 0))),
exercise= annotate_dat_fun(comp_name = "exercise", main_effect= "exercise",
results(dds, contrast= c(1/4, -1/4, 1/4, -1/4, -1/4, -1/4, 1/4, 1/4, 0))),
zt= annotate_dat_fun(comp_name = "zt", main_effect= "zt",
results(dds, contrast= c(1/4, 1/4, -1/4, 1/4, -1/4, -1/4, -1/4, 1/4, 0))))
# Chunk 7: extract exercise contrast
ex_contrasts <- list(zt3_wt= annotate_dat_fun(comp_name = "zt3_wt", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_3_ex", "wt_3_sed"))),
zt15_wt= annotate_dat_fun(comp_name = "zt15_wt", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_ex", "wt_15_sed"))),
zt3_ko=annotate_dat_fun(comp_name = "zt3_ko", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_ex", "ko_3_sed"))),
zt15_ko= annotate_dat_fun(comp_name = "zt15_ko", main_effect= "exercise",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "ko_15_sed"))))
# Chunk 8: extract genotype contrast analysis
genotype_contrasts <- list(zt3_ex= annotate_dat_fun(comp_name = "zt3_ex", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_ex", "wt_3_ex"))),
zt15_ex= annotate_dat_fun(comp_name = "zt15_ex", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "wt_15_ex"))),
zt3_sed=annotate_dat_fun(comp_name = "zt3_sed", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_3_sed", "wt_3_sed"))),
zt15_sed= annotate_dat_fun(comp_name = "zt15_sed", main_effect= "genotype",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_sed", "wt_15_sed"))))
# Chunk 9: extract ZT contrast
zt_contrasts <- list(wt_sed=  annotate_dat_fun(comp_name = "wt_sed", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_sed", "wt_3_sed"))),
wt_ex=  annotate_dat_fun(comp_name = "wt_ex", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "wt_15_ex", "wt_3_ex"))),
ko_sed=annotate_dat_fun(comp_name = "ko_sed", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_sed", "ko_3_sed"))),
ko_ex= annotate_dat_fun(comp_name = "ko_ex", main_effect= "zt",
results(dds, independentFiltering = T, c("genotype_zt_exercise", "ko_15_ex", "ko_3_ex"))))
# Chunk 10: save
openxlsx::write.xlsx(lapply(main_effects, tidy_DE_output_for_saving_fun),
file = here::here("./out/main_effects.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(ex_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/ex_vs_sed_contrasts.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(genotype_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/wt_vs_ko_contrasts.xlsx"), keepNA= TRUE, na.string= "")
openxlsx::write.xlsx(lapply(zt_contrasts, tidy_DE_output_for_saving_fun),
file = here::here("./out/zt3_vs_zt15_contrasts.xlsx"), keepNA= TRUE, na.string= "")
DE_results <- list(main_effects = main_effects, ex_contrasts = ex_contrasts, genotype_contrasts= genotype_contrasts, zt_contrasts = zt_contrasts)
saveRDS(DE_results, file=  here::here("./out/DE_results.rda"))
# Chunk 11: check model fit
#dispersion estimates
pdf(here::here("./out/disp_ests.pdf"))
plotDispEsts(dds)
dev.off()
# P value distribution
main_effects_pval_hist <- pval_hist_fun(data = do.call("rbind", main_effects), title ="main effects")
genotype_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", genotype_contrasts), title ="Genotype: wt vs KO")
ex_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", ex_contrasts), title ="Treatment: ex vs sed")
zt_contrasts_pval_hist <- pval_hist_fun(data = do.call("rbind", zt_contrasts), title ="Time of Day: zt15 vs zt3")
ggplot2::ggplot(filename= "pval_hist_main_effects.pdf", plot = main_effects_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename= "pval_hist_genotype.pdf", plot= genotype_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename= "pval_hist_exercise.pdf", plot= ex_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
ggplot2::ggplot(filename = "pval_hist_zt.pdf", plot = zt_contrasts_pval_hist, path = here::here("./out"), width= 7, height= 7)
# Chunk 12: session info
sessionInfo()
